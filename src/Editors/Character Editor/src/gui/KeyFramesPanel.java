/*
 * KeyFramesPanel.java
 *
 * Created on 03 December 2008, 16:53
 */

package gui;

import characters.Animation;
import characters.FixedFrame;
import characters.KeyFrame;
import frames.Frame;
import frames.FramesCollection;
import frames.IFramesTaker;
import java.awt.event.KeyEvent;
import util.UByte;

/**
 *
 * @author  Gil
 */
public class KeyFramesPanel extends javax.swing.JPanel
    implements IFramesTaker {
    
    
    protected ActionFramePanel actionFramePanel;
    protected CollectionLinePanel collectionPanel;
    
    Animation anim;
    
    
    
    /** Creates new form KeyFramesPanel */
    public KeyFramesPanel() {
        initComponents();
        initAdvancedComponents();
        
        
        takeFrame(null);
        requestFocus();
    }
    
    /** called when changing skin */
    public void setCollection(FramesCollection collection){
        collectionPanel.setCollection(collection, null);
    }
    
    /** called when entering (changing animation) */
    public void setAnimation(FramesCollection original, Animation animation){
        anim = animation;
        if (animation==null){
            keyPanel.reset();
            takeFrame(null);
            setCollection(new FramesCollection());
            return;
        }
        int[] indexes = new int[animation.fixedFrames.size()];
        int i=0;
        for(FixedFrame f: animation.fixedFrames)
            indexes[i++] = f.frameIndex;
        collectionPanel.setCollection(original, indexes);
        setFirstKeyFrame();
        markKeyFrames();
    }
    
    
    protected void markKeyFrames(){
        for (int k:anim.keyFrames.keySet())
            collectionPanel.mark(k, !anim.keyFrames.get(k).invalid);
    }
    
    
    
    
    protected void initAdvancedComponents(){
    	collectionPanel = new CollectionLinePanel(bottomScroll, this, null);
        actionFramePanel = new ActionFramePanel(topScroll, keyPanel);
        
        collectionPanel.setForeground(new java.awt.Color(255, 255, 255));
        bottomScroll.setViewportView(collectionPanel);
        bottomScroll.setWheelScrollingEnabled(false);

        actionFramePanel.setForeground(new java.awt.Color(255, 255, 255));
        topScroll.setViewportView(actionFramePanel);
        topScroll.setWheelScrollingEnabled(false);
        actionFramePanel.showCM(false);
        
        keyPanel.setTaker(actionFramePanel);
        keyPanel.setMarkable(collectionPanel);
    }
    
    
    protected void initKeyFrame(){
        if (anim == null) return;
        int fn = collectionPanel.getSelectedNum();
        KeyFrame key;
        if (!anim.keyFrames.containsKey(fn)){
            key = new KeyFrame(anim.versionID);
            key.index = new UByte(fn);
            key.impulsed = anim.velocityCtrl;
            if (anim.attackOpt.get() == Animation.ATTACK_POINTS)
                key.actionType = new UByte();
            else key.actionType = null;
            key.invalid = true;
            anim.keyFrames.put(fn, key);
            //if (anim != null)
        }else key = anim.keyFrames.get(fn); // it must exist
//        if (anim.attackOpt != null && anim.attackOpt.get() == Animation.ATTACK_POINTS)
//            key.actionType = new UByte();
//        else{
//            key.actionType = null;
//            key.actionPoints.clear();
//        }
        actionFramePanel.setActionPoints(key.actionPoints);
        keyPanel.setKeyFrame(key);
    }
    
    
    
    /*
    protected int countActiveFrames(){
        int res = 0;
        for(KeyFrame key:keyFrames.values())
            if (!key.invalid) res++;
        return res;
    }*/
    
    @Override
	public void takeFrame(Frame frame) {
		actionFramePanel.setFrame(frame);
        if (frame!=null){
            initKeyFrame();
        }else{
            keyPanel.setAllEnabled(false);
            actionFramePanel.setActionPoints(null);
        }
        frameLabel.setText("Frame " + (collectionPanel.getSelectedNum()+1) + " of " + collectionPanel.getNumFrames());
        requestFocus();
		repaint();
	}

    public void takeFrames(Frame[] frame) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
    
    protected void setFirstKeyFrame(){
        initKeyFrame();
    }
    
    
    
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        topScroll = new gui.Scroller();
        bottomScroll = new gui.Scroller();
        keyPanel = new gui.KeyPanel();
        frameLabel = new javax.swing.JLabel();

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        frameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        frameLabel.setText("Frame 0 of 0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(topScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 598, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(frameLabel))
                    .addComponent(bottomScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(keyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(topScroll, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(frameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bottomScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        switch(evt.getKeyCode()){
            case KeyEvent.VK_LEFT: collectionPanel.selectPrevious(); break;
            case KeyEvent.VK_RIGHT: collectionPanel.selectNext(); break;
            case KeyEvent.VK_UP: collectionPanel.selectPageUp();break;
            case KeyEvent.VK_DOWN: collectionPanel.selectPageDown(); break;
        }
         requestFocus();
    }//GEN-LAST:event_formKeyPressed

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        if (!keyPanel.hasFocus())
            requestFocus();
    }//GEN-LAST:event_formMouseMoved
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private gui.Scroller bottomScroll;
    private javax.swing.JLabel frameLabel;
    private gui.KeyPanel keyPanel;
    private gui.Scroller topScroll;
    // End of variables declaration//GEN-END:variables

    
}
