/*
 * MassCenterPanel.java
 *
 * Created on 27 November 2008, 10:11
 */

package gui;

import game.GameInvariants;
import goodies.Goodie;
import javax.swing.JOptionPane;
import util.UByte;


/**
 *
 * @author  Gil Costa
 * TODO: histograms to compute lines and collumns
 */
public class GoodiePanel extends javax.swing.JPanel {
    
    public static final String USER_TYPE = "user defined";
    public static final String NEW_TYPE = "other...";
    public static final String ADD_NEW_TYPE = "insert the type id";
    public static final String EXISTENT_TYPE = "type already exists";
    
    
    Goodie goodie;
    
    
    /** Creates new form MassCenterPanel */
    public GoodiePanel() {
        initComponents();
        typeCombo.removeAllItems();
        goodie = null;
        setAllEnabled(false);
    }
    
    //---------------------
    // ----- SETTERS -----
    //---------------------
    
    public void setAllEnabled(boolean enabled){
        this.setEnabled(enabled);
        setFieldsEnabled(enabled);
    }
    
    protected void setFieldsEnabled(boolean enabled){
        nameField.setEnabled(enabled);
        amountField.setEnabled(enabled);
        typeCombo.setEnabled(enabled);
        //autoBut.setEnabled(enabled);
    }


    public void reset(){
        goodie = null;
    }
    
    public void update(){
        if (this.goodie==null) return;
        goodie.name = new UByte(getGoodieName());
        goodie.type = new UByte(getType());
        goodie.amount = (short) getAmount();
    }
    
    
    public void setGoodie(Goodie goodie){
        update();
        this.goodie = goodie;
        if (goodie == null){
            setAllEnabled(false);
        }else{
            setAllEnabled(true);
            int name = 0;
            if (goodie.name!= null) name = goodie.name.get();
            nameField.setText(name + "");
            amountField.setText(goodie.amount + "");
            setType(goodie.type.get());
        }
        repaint();
    }
    
    
    
    
    protected void setType(int type){
        typeCombo.removeAllItems();
        int i = 0;
        for(String s:GameInvariants.goodieTypes)
            typeCombo.addItem("["+ i++ + "] " + s);
        for( ; i <= type; i++)
            typeCombo.addItem("["+i+"] " + USER_TYPE + " " + i);
        typeCombo.addItem(NEW_TYPE);
            
        typeCombo.setSelectedIndex(type);
    }
    
    
    
    //-------------------
    // ---- GETTERS ----
    //-------------------
    
    
     @Override
    public boolean hasFocus(){
        return typeCombo.hasFocus() || nameField.hasFocus() || amountField.hasFocus();
    }
     
    
    
    
    public int getAmount(){
        int amount = 1;
        try{
            amount = Integer.parseInt(amountField.getText());
        }catch (NumberFormatException e){}
        if (amount > Short.MAX_VALUE) amount = Short.MAX_VALUE;
        return amount;
    }
    
    public int getType(){
        return typeCombo.getSelectedIndex();
    }
    
    public int getGoodieName(){
        int amount = 0;
        try{
            amount = Integer.parseInt(nameField.getText());
        }catch (NumberFormatException e){}
        if (amount > 255) amount = 255;
        return amount;
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        typeCombo = new javax.swing.JComboBox();
        amountField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jLabel3.setText("Name index:");

        nameField.setColumns(3);
        nameField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        nameField.setText("0");
        nameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameFieldActionPerformed(evt);
            }
        });
        nameField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                nameFieldFocusLost(evt);
            }
        });

        jLabel2.setText("Type:");

        typeCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "new type..." }));
        typeCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboActionPerformed(evt);
            }
        });
        typeCombo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                typeComboFocusLost(evt);
            }
        });

        amountField.setColumns(3);
        amountField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        amountField.setText("1");
        amountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldActionPerformed(evt);
            }
        });
        amountField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                amountFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                amountFieldFocusLost(evt);
            }
        });

        jLabel1.setText("Amount:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(typeCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(6, 6, 6))
                    .addComponent(nameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(typeCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void nameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameFieldActionPerformed
        typeCombo.requestFocus();
}//GEN-LAST:event_nameFieldActionPerformed

    private void nameFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusGained
        nameField.selectAll();
}//GEN-LAST:event_nameFieldFocusGained

    private void nameFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFieldFocusLost

}//GEN-LAST:event_nameFieldFocusLost

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained

    }//GEN-LAST:event_formFocusGained

    private void typeComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboActionPerformed
        if (typeCombo.getItemCount()<=1) return;
        int selected = typeCombo.getSelectedIndex();
        int lastIndex = typeCombo.getItemCount()-1;
        if ( selected == lastIndex ){
            try{
                int val = Integer.parseInt(JOptionPane.showInputDialog(ADD_NEW_TYPE));
                if (val<typeCombo.getItemCount()-1 && val>=0)
                    JOptionPane.showMessageDialog(null, EXISTENT_TYPE);
                else if (val>=typeCombo.getItemCount()-1)
                    setType(val);
            }catch(Exception e){}
        }
    }//GEN-LAST:event_typeComboActionPerformed

    private void amountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldActionPerformed
        requestFocus();
}//GEN-LAST:event_amountFieldActionPerformed

    private void amountFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldFocusGained
        // TODO add your handling code here:
}//GEN-LAST:event_amountFieldFocusGained

    private void amountFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_amountFieldFocusLost
        requestFocus();
}//GEN-LAST:event_amountFieldFocusLost

    private void typeComboFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typeComboFocusLost

    }//GEN-LAST:event_typeComboFocusLost
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField nameField;
    private javax.swing.JComboBox typeCombo;
    // End of variables declaration//GEN-END:variables
    
}
