/*
 * HotSpotPanel.java
 *
 * Created on 27 November 2008, 10:11
 */

package gui;

import image.ImageUtils;
import java.awt.Color;
import java.awt.image.BufferedImage;
import util.ICoordinatesTaker;
import util.IntPoint;

/**
 *
 * @author  Gil
 */
public class HotSpotPanel extends javax.swing.JPanel implements ICoordinatesTaker {
    
    protected static final int BOTTOM_PIXELS = 3;
    
    FramePanel framePanel;
    
    /** Creates new form HotSpotPanel */
    public HotSpotPanel() {
        initComponents();
        setAllEnabled(false);
    }
    
    
    
    //---------------------
    // ----- SETTERS -----
    //---------------------
    
    public void setAllEnabled(boolean enabled){
        if (enabled && framePanel==null) enabled = false;
        this.setEnabled(enabled);
        cmCheck.setEnabled(enabled);
        if (cmCheck.isSelected() || !enabled)
            setFieldsEnabled(enabled);
    }
    
    protected void setFieldsEnabled(boolean enabled){
        cmPanel.setEnabled(enabled);
        cmXField.setEnabled(enabled);
        cmYField.setEnabled(enabled);
        autoBut.setEnabled(enabled);
        massBut.setEnabled(enabled);
    }
    
    
    public void setFramePanel(FramePanel framePanel){
        this.framePanel = framePanel;
        setAllEnabled(framePanel!=null);
    }
    
    public void takeCoordinates(int index, int x, int y){
		cmXField.setText(x+"");
		cmYField.setText(y+"");
	}
    
    
    protected void updateCoordinates(){
        int v1 = framePanel.getFrame().getCM().getX();
        int v2 = framePanel.getFrame().getCM().getY();
        try{
            v1 = Integer.parseInt(cmXField.getText());
            v2 = Integer.parseInt(cmYField.getText());
        }catch (NumberFormatException e){
            takeCoordinates(-1,v1,v2);
        }
        framePanel.getFrame().setCM(new IntPoint(v1,v2));
        framePanel.repaint();
    }
    
    
    
    
    
    //-------------------
    // ---- GETTERS ----
    //-------------------
    
    public boolean isCMChecked(){
        return cmCheck.isSelected();
    }
    
    public void checkCM(boolean check){
        cmCheck.setSelected(check);
    }
    
    public IntPoint getCM(){
        return framePanel.getFrame().getCM();
    }
    
    @Override
    public boolean hasFocus(){
        return cmXField.hasFocus() || cmYField.hasFocus();
    }
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmCheck = new javax.swing.JCheckBox();
        cmPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmXField = new javax.swing.JTextField();
        cmYField = new javax.swing.JTextField();
        autoBut = new javax.swing.JButton();
        massBut = new javax.swing.JButton();

        cmCheck.setSelected(true);
        cmCheck.setText("Hot Point");
        cmCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmCheckActionPerformed(evt);
            }
        });

        jLabel1.setText("CX =");

        jLabel2.setText("CY =");

        cmXField.setColumns(3);
        cmXField.setText("255");
        cmXField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmXFieldActionPerformed(evt);
            }
        });
        cmXField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmXFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmXFieldFocusLost(evt);
            }
        });

        cmYField.setColumns(3);
        cmYField.setText("255");
        cmYField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmYFieldActionPerformed(evt);
            }
        });
        cmYField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmYFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmYFieldFocusLost(evt);
            }
        });

        autoBut.setText("automatic");
        autoBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoButActionPerformed(evt);
            }
        });

        massBut.setText("mass center");
        massBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                massButActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cmPanelLayout = new javax.swing.GroupLayout(cmPanel);
        cmPanel.setLayout(cmPanelLayout);
        cmPanelLayout.setHorizontalGroup(
            cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cmPanelLayout.createSequentialGroup()
                        .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(massBut)
                            .addComponent(autoBut, javax.swing.GroupLayout.DEFAULT_SIZE, 93, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, cmPanelLayout.createSequentialGroup()
                        .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21))))
        );
        cmPanelLayout.setVerticalGroup(
            cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cmPanelLayout.createSequentialGroup()
                .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmXField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(cmPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmYField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(autoBut)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(massBut)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmCheck)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(cmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cmCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cmXFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmXFieldActionPerformed
        updateCoordinates();
        cmYField.requestFocus();
    }//GEN-LAST:event_cmXFieldActionPerformed

    private void cmXFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmXFieldFocusLost
        updateCoordinates();
    }//GEN-LAST:event_cmXFieldFocusLost

    private void cmYFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmYFieldActionPerformed
        updateCoordinates();
        //requestFocus();
        framePanel.requestFocus();
    }//GEN-LAST:event_cmYFieldActionPerformed

    private void cmYFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmYFieldFocusLost
        updateCoordinates();
    }//GEN-LAST:event_cmYFieldFocusLost

    private void cmCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmCheckActionPerformed
        boolean checked = cmCheck.isSelected();
        setFieldsEnabled(checked);
        framePanel.showCM(checked);
        framePanel.repaint();
    }//GEN-LAST:event_cmCheckActionPerformed

    private void cmXFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmXFieldFocusGained
        cmXField.selectAll();
    }//GEN-LAST:event_cmXFieldFocusGained

    private void cmYFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmYFieldFocusGained
        cmYField.selectAll();
    }//GEN-LAST:event_cmYFieldFocusGained

    private void autoButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoButActionPerformed
        if (framePanel == null || framePanel.getFrame() == null) return;
        BufferedImage img = framePanel.getFrame().getImage();
        if (img == null) return;
        IntPoint pt = ImageUtils.calculateMassCentre(img);
        Color c = ImageUtils.borderPredominance(img);
        int y;
        for(y = img.getHeight()-1; y>0; y--){
            boolean boo = false;
            for(int x=0; x<img.getWidth(); x++)
                if ( img.getRGB(x, y)!=c.getRGB()){
                    boo = true;
                    break;
                }
            if (boo) break;
        }
        pt.setY(Math.max(y-BOTTOM_PIXELS,0));
        framePanel.getFrame().setCM(pt);
        takeCoordinates(-1,pt.getX(),pt.getY());
        framePanel.repaint();
    }//GEN-LAST:event_autoButActionPerformed

    private void massButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_massButActionPerformed
        if (framePanel == null || framePanel.getFrame() == null) return;
        BufferedImage img = framePanel.getFrame().getImage();
        if (img == null) return;
        IntPoint pt = ImageUtils.calculateMassCentre(img);
        framePanel.getFrame().setCM(pt);
        takeCoordinates(-1,pt.getX(),pt.getY());
        framePanel.repaint();
}//GEN-LAST:event_massButActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autoBut;
    private javax.swing.JCheckBox cmCheck;
    private javax.swing.JPanel cmPanel;
    private javax.swing.JTextField cmXField;
    private javax.swing.JTextField cmYField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton massBut;
    // End of variables declaration//GEN-END:variables
    
}
